[
  {
    "objectID": "slides/01-intro/01-intro.html#apresentação",
    "href": "slides/01-intro/01-intro.html#apresentação",
    "title": "Introdução",
    "section": "Apresentação",
    "text": "Apresentação\n\nProf. Bruno Silva\nAtendimento:\n\nVia email: bruno.silva@ect.ufrn.br\nVia Discord\nHorário para a turma: terças e quintas, das 16:40 às 17:40\n\nÁreas de interesse:\n\nProcessamento de imagens e visão computacional\nInteligência artificial e robótica"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#por-que-poo",
    "href": "slides/01-intro/01-intro.html#por-que-poo",
    "title": "Introdução",
    "section": "Por que POO?",
    "text": "Por que POO?\n\nQual a importância de POO para um desenvolvedor?\nEla constitui realmente uma ferramenta importante?\n\n\nSão estas as duas perguntas que cada um de vocês deverá responder ao final do semestre"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#objetivos",
    "href": "slides/01-intro/01-intro.html#objetivos",
    "title": "Introdução",
    "section": "Objetivos",
    "text": "Objetivos\nO objetivo do curso é fazer com que os estudantes sejam capazes de:\n\nIdentificar os conceitos fundamentais do paradigma de programação orientado a objetos (POO)\nUtilizar apropriadamente as técnicas de modelagem e programação orientadas a objeto\nDesenvolver aplicações utilizando o paradigma de POO"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#ferramentas",
    "href": "slides/01-intro/01-intro.html#ferramentas",
    "title": "Introdução",
    "section": "Ferramentas",
    "text": "Ferramentas\nLinguagem\n\nÊnfase da disciplina: teoria de POO\nEntretanto: é necessário escolher uma linguagem para colocar os conceitos em prática\nLinguagem escolhida:\n\n\nPython"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#ferramentas-1",
    "href": "slides/01-intro/01-intro.html#ferramentas-1",
    "title": "Introdução",
    "section": "Ferramentas",
    "text": "Ferramentas\nLinguagem Python\n\nLinguagem multi paradigmas\nSuporta o paradigma de POO\nLinguagem de fácil aprendizado"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#ferramentas-2",
    "href": "slides/01-intro/01-intro.html#ferramentas-2",
    "title": "Introdução",
    "section": "Ferramentas",
    "text": "Ferramentas\n\nPython 3.X\nIDES:\n\nMais simples: Sublime/ Atom\nMais completas: Visual Studio Code/ PyCharm\n\nJupyter Notebooks"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#ferramentas-3",
    "href": "slides/01-intro/01-intro.html#ferramentas-3",
    "title": "Introdução",
    "section": "Ferramentas",
    "text": "Ferramentas\n\nAulas\n\nPrimeiras 2 aulas da semana: teoria\nÚltimas 2 aulas da semana: prática\n\nDiscord\n\nLaboratório virtual: alunos são encorajados a se reunirem em canais de áudio\nPerguntas podem ser feitas ao professor ou a todos da turma"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#ementa-da-disciplina",
    "href": "slides/01-intro/01-intro.html#ementa-da-disciplina",
    "title": "Introdução",
    "section": "Ementa da Disciplina",
    "text": "Ementa da Disciplina\nPilares fundamentais:\n\nAbstração\nEncapsulamento\nHerança\nPolimorfismo\n\nConceitos de Programação:\n\nErros e exceções\nEstruturas de dados (listas, dicionários, etc)"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#ementa-da-disciplina-1",
    "href": "slides/01-intro/01-intro.html#ementa-da-disciplina-1",
    "title": "Introdução",
    "section": "Ementa da Disciplina",
    "text": "Ementa da Disciplina\nTodas as aulas programadas estão cadastradas no SIGAA"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#avaliação",
    "href": "slides/01-intro/01-intro.html#avaliação",
    "title": "Introdução",
    "section": "Avaliação",
    "text": "Avaliação\n\nUnidades I e II:\n\nTarefas (40%)\nProva (60%)\n\nUnidade III:\n\nTarefas (20%)\nProjeto (80%)"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#material-bibliográfico",
    "href": "slides/01-intro/01-intro.html#material-bibliográfico",
    "title": "Introdução",
    "section": "Material bibliográfico",
    "text": "Material bibliográfico\n\nLivros online:\n\nHow to Think Like a Computer Scientist\nObject-Oriented Programming in Python\nA Byte of Python\n\nTutoriais:\n\nDocumentação de Python\nReal Python"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#material-bibliográfico-1",
    "href": "slides/01-intro/01-intro.html#material-bibliográfico-1",
    "title": "Introdução",
    "section": "Material bibliográfico",
    "text": "Material bibliográfico\n\nLivros:\n\nLearning Python\nPython 3 Object Oriented Programming"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#material-bibliográfico-2",
    "href": "slides/01-intro/01-intro.html#material-bibliográfico-2",
    "title": "Introdução",
    "section": "Material bibliográfico",
    "text": "Material bibliográfico\n\nCursos online:\n\nPython OOP : Four Pillars of OOP in Python 3 for Beginners\n\nApostilas:\n\nCaelum"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#comparação-com-lip",
    "href": "slides/01-intro/01-intro.html#comparação-com-lip",
    "title": "Introdução",
    "section": "Comparação com LIP",
    "text": "Comparação com LIP\n\nAssume-se que você domina os conceitos fundamentais de LiP (variáveis, estruturas de controle e funções).\nPOO envolve consideravelmente mais teoria do que LiP\nPOO exige também mais proatividade por parte do aluno"
  },
  {
    "objectID": "slides/01-intro/01-intro.html#sejam-bem-vindos",
    "href": "slides/01-intro/01-intro.html#sejam-bem-vindos",
    "title": "Introdução",
    "section": "Sejam bem-vindos!",
    "text": "Sejam bem-vindos!\nTarefa - instalar a distribuição Anaconda:\n\nWindows\nLinux\n\nEm seguida, verifique se o terminal Python está funcionando no seu computador\n\n\n\nECT2504 - Programação Orientada a Objetos"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#objetivos",
    "href": "slides/02-python-basico/02-python-basico.html#objetivos",
    "title": "Python Básico",
    "section": "Objetivos",
    "text": "Objetivos\nO objetivo da aula é introduzir comandos básicos em Python:\n\nTerminal interativo de comandos\nVariáveis e tipos\nOperadores e expressões\nEntrada e saída\nControle de fluxo (if, while, for)"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#a-linguagem-python",
    "href": "slides/02-python-basico/02-python-basico.html#a-linguagem-python",
    "title": "Python Básico",
    "section": "A Linguagem Python",
    "text": "A Linguagem Python\n\nCriada no início dos anos 90\nAplicações:\n\nLinguagem de script (auxiliar)\nAplicações das grandes indústrias (Google, Dropbox, Intel, Netflix, etc.)\nAplicações científicas (NASA, Robot Operating System, etc.)\nBibliotecas de IA: Deep learning (PyTorch, TensorFlow, etc.) —"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#a-linguagem-python-1",
    "href": "slides/02-python-basico/02-python-basico.html#a-linguagem-python-1",
    "title": "Python Básico",
    "section": "A Linguagem Python",
    "text": "A Linguagem Python\nPor que Python?\n\nSimplicidade\nFacilidade de aprendizado e de correção de erros\nCódigo limpo\nCódigo multiplataforma (Linux/Mac/Windows)\nSuporta o paradigma de programação orientada a objetos"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#a-linguagem-python-2",
    "href": "slides/02-python-basico/02-python-basico.html#a-linguagem-python-2",
    "title": "Python Básico",
    "section": "A Linguagem Python",
    "text": "A Linguagem Python\n\nÉ uma linguagem interpretada\nSuporta um terminal de comandos interativo\n\nQualquer comando da linguagem pode ser executado\n\nAgiliza a programação\nFacilita a depuração de erros"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#a-linguagem-python-3",
    "href": "slides/02-python-basico/02-python-basico.html#a-linguagem-python-3",
    "title": "Python Básico",
    "section": "A Linguagem Python",
    "text": "A Linguagem Python\nInstalação (Windows e Linux):\n\nBaixar a distribuição Anaconda para Python\n\nWindows\nLinux\n\nInstalar a distribuição\nExecutar terminal Python"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#terminal-de-comandos-interativo",
    "href": "slides/02-python-basico/02-python-basico.html#terminal-de-comandos-interativo",
    "title": "Python Básico",
    "section": "Terminal de Comandos Interativo",
    "text": "Terminal de Comandos Interativo"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#editando-arquivos-.py",
    "href": "slides/02-python-basico/02-python-basico.html#editando-arquivos-.py",
    "title": "Python Básico",
    "section": "Editando Arquivos .py",
    "text": "Editando Arquivos .py"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#jupyter-notebook",
    "href": "slides/02-python-basico/02-python-basico.html#jupyter-notebook",
    "title": "Python Básico",
    "section": "Jupyter Notebook",
    "text": "Jupyter Notebook"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#zen-do-python",
    "href": "slides/02-python-basico/02-python-basico.html#zen-do-python",
    "title": "Python Básico",
    "section": "Zen do python",
    "text": "Zen do python\nimport this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nReadability counts.\nIf the implementation is hard to explain, it's a bad idea."
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c",
    "href": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c",
    "title": "Python Básico",
    "section": "Diferenças de Python para C++",
    "text": "Diferenças de Python para C++\n\nTipos das variáveis determinados automaticamente:\n\n x = 4 \n type(x) # int\n s = \"alo\"\n type(s) # str"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c-1",
    "href": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c-1",
    "title": "Python Básico",
    "section": "Diferenças de Python para C++",
    "text": "Diferenças de Python para C++\n\nIndentação obrigatória:\n\nif x % 2 == 0:\n    cont_par += 1 # Código indentado\nelse:\n    cont_impar += 1 # Código indentado"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c-2",
    "href": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c-2",
    "title": "Python Básico",
    "section": "Diferenças de Python para C++",
    "text": "Diferenças de Python para C++\n\n; não é necessário\n\n i = 5\n i +=1\n print(i)"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c-3",
    "href": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c-3",
    "title": "Python Básico",
    "section": "Diferenças de Python para C++",
    "text": "Diferenças de Python para C++\n\nLaços for:\n\nC++:\n\nfor(int i=0; i < n; i++){\n  cout << i << endl;\n}\n\nPython:\n\nfor i in range(0,n): # até n-1\n  print(i)"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c-4",
    "href": "slides/02-python-basico/02-python-basico.html#diferenças-de-python-para-c-4",
    "title": "Python Básico",
    "section": "Diferenças de Python para C++",
    "text": "Diferenças de Python para C++\n\nErros que não sejam de sintaxe só são reconhecidos se o código for executado\n\nx = 50\ny = 100\n\nif x % 2 == 0:\n    print('x é par')\n    print(y)\nelse:\n    print('x não é par')\n    print(z) # z não foi declarado"
  },
  {
    "objectID": "slides/02-python-basico/02-python-basico.html#jupyter-notebook-1",
    "href": "slides/02-python-basico/02-python-basico.html#jupyter-notebook-1",
    "title": "Python Básico",
    "section": "Jupyter Notebook",
    "text": "Jupyter Notebook\nRoteiro com comandos básicos Python e exercícios:\n02-Python-Basico\n\n\n\nECT2504 - Programação Orientada a Objetos"
  }
]